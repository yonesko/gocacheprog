# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages: # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build-job: # This job runs in the build stage, which runs first.
  image: repo.int.tsum.com/tsum/core/golang:1.24.1
  stage: build
  script:
    - go build -o gocacheprog .

unit-test-job: # This job runs in the test stage.
  image: repo.int.tsum.com/md/golang:v1.24.1
  stage: test    # It only starts when the job in the build stage completes successfully.
  services:
    - name: repo.int.tsum.com:443/tsum/core/bitnami/keydb:6.3.4
      alias: keydbhost
      variables:
        ALLOW_EMPTY_PASSWORD: yes
  script:
    - export GOCACHEPROG="gocacheprog -dir=$(mktemp -d) -log-resp -r-urls=keydbhost:6379"
    - go build -o gocacheprog .

.build_docker: &docker_build_template
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  stage: deploy
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"repo.int.tsum.com\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  script:
    - /kaniko/executor --context . --dockerfile $DOCKERFILE --destination $IMAGE:$TAG --cache=true
  only:
    refs:
      - main


deploy-job: # This job runs in the deploy stage.
  <<: *docker_build_template
  variables:
    IMAGE: repo.int.tsum.com/md/golang
    TAG: v1.24.1
    DOCKERFILE: Dockerfile


